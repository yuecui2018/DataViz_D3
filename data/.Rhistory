polygon(B[[1]], border = NA, col="#F2F68F")
polygon(AintB[[1]], border=NA, col = "#95F1B0")
# Labels
text(venn2[[5]]$x, venn2[[5]]$y, "Beaver Playing\na Guitar", font = 3)
text(venn2[[6]]$x, venn2[[6]]$y, "Duck Playing\na Keyboard", font = 3)
text(venn2[[7]]$x, venn2[[7]]$y, "Platypus Playing\na Keytar", font = 3)
# Title? Sure.
par("usr")  # For if you want to see the dimensions of the current plot.
text(.5, .9, "What do you get when you cross a beaver\nplaying a guitar and a duck playing a keyboard?", cex=1.2)
text(.5, .92, "What do you get when you cross a beaver\nplaying a guitar and a duck playing a keyboard?", cex=1.2)
par(mar=c(0,0,0,0))
plot(c(0, 1), c(0, 1), type = "n", axes = FALSE, xlab = "", ylab = "", asp=1)
polygon(A[[1]], border = NA, col="#73F1DE")
polygon(B[[1]], border = NA, col="#F2F68F")
polygon(AintB[[1]], border=NA, col = "#95F1B0")
# Labels
text(venn2[[5]]$x, venn2[[5]]$y, "Beaver Playing\na Guitar", font = 3)
text(venn2[[6]]$x, venn2[[6]]$y, "Duck Playing\na Keyboard", font = 3)
text(venn2[[7]]$x, venn2[[7]]$y, "Platypus Playing\na Keytar", font = 3)
# Title? Sure.
par("usr")  # For if you want to see the dimensions of the current plot.
text(.5, .92, "What do you get when you cross a beaver\nplaying a guitar and a duck playing a keyboard?", cex=1.2, font=3)
?plot
venn1 <- draw.single.venn(10, "Duck")
venn1 <- draw.single.venn(10, "Duck")
grid.ls(venn1)
str(venn1)
venn1[[3]]$label <- "Duck"
venn1[[4]]$label <- ""
grid.newpage()
grid.draw(venn1)
venn2 <- draw.pairwise.venn(100, 100, 40, c("Beaver Playing a Guitar", "Duck Playing a Keyboard"))
grid.ls(venn2)
venn2[[5]]$label <- "Beaver Playing a Guitar"
venn2[[6]]$label <- "Duck Playing a Keyboard"
venn2[[7]]$label <- "Platypus Playing a Keytar"
venn2[[8]]$label <- ""
venn2[[9]]$label <- ""
grid.newpage()
grid.draw(venn2)
categories <- c("Flour", "Egg", "Milk")
venn3 <- draw.triple.venn(10, 10, 10, 3, 3, 3, 3, category=categories)
venn3[[7]]$label <- "Flour"
venn3[[8]]$label <- "Pasta"
venn3[[9]]$label <- "Egg"
venn3[[10]]$label <- "Batter"
venn3[[11]]$label <- "Pancakes"
venn3[[12]]$label <- "Omelette"
venn3[[13]]$label <- "Milk"
venn3[[14]]$label <- ""
venn3[[15]]$label <- ""
venn3[[16]]$label <- ""
# Draw it.
grid.newpage()
grid.draw(venn3)
venn3[[7]]$label <- ""
venn3[[9]]$label <- ""
venn3[[13]]$label <- ""
grid.newpage()
grid.draw(venn3)
grid.text("Flour", unit(venn3[[7]]$x, "npc"), unit(venn3[[7]]$y, "npc"), gp=gpar(cex=2))
grid.text("Egg", unit(venn3[[9]]$x, "npc"), unit(venn3[[9]]$y, "npc"), gp=gpar(cex=2))
grid.text("Milk", unit(venn3[[13]]$x, "npc"), unit(venn3[[13]]$y, "npc"), gp=gpar(cex=2))
venn2 <- draw.pairwise.venn(100, 100, 40, c("Beaver Playing a Guitar", "Duck Playing a Keyboard"), fill = c("#73F1DE", "#F2F68F"), col = NA)
grid.ls(venn2)
venn2[[5]]$label <- "Beaver Playing a Guitar"
venn2[[6]]$label <- "Duck Playing a Keyboard"
venn2[[7]]$label <- "Platypus Playing a Keytar"
venn2[[8]]$label <- ""
venn2[[9]]$label <- ""
grid.newpage()
grid.draw(venn2)
venn2 <- draw.pairwise.venn(100, 100, 40, c("Beaver Playing a Guitar", "Duck Playing a Keyboard"), fill = c("#73F1DE", "#F2F68F"), col = NA)
# Deal with intersection. Source: http://datafl.ws/65i
A <- list(list(x = as.vector(venn2[[3]][[1]]), y = as.vector(venn2[[3]][[2]])))
B <- list(list(x = as.vector(venn2[[4]][[1]]), y = as.vector(venn2[[4]][[2]])))
AintB <- polyclip(A, B)
par(mar=c(0,0,0,0))
plot(c(0, 1), c(0, 1), type = "n", axes = FALSE, xlab = "", ylab = "", asp=1)
polygon(A[[1]], border = NA, col="#73F1DE")
polygon(B[[1]], border = NA, col="#F2F68F")
polygon(AintB[[1]], border=NA, col = "#95F1B0")
# Labels
text(venn2[[5]]$x, venn2[[5]]$y, "Beaver Playing\na Guitar", font = 3)
text(venn2[[6]]$x, venn2[[6]]$y, "Duck Playing\na Keyboard", font = 3)
text(venn2[[7]]$x, venn2[[7]]$y, "Platypus Playing\na Keytar", font = 3)
# Title? Sure.
par("usr")  # For if you want to see the dimensions of the current plot.
text(.5, .92, "What do you get when you cross a beaver\nplaying a guitar and a duck playing a keyboard?", cex=1.2, font=3)
grid.ls(venn1)
venn2 <- draw.pairwise.venn(100, 100, 40, c("Beaver Playing a Guitar", "Duck Playing a Keyboard"), fill = c("#73F1DE", "#F2F68F"), col = NA)
grid.ls(venn2)
venn2[[5]]$label <- "Beaver Playing a Guitar"
venn2[[6]]$label <- "Duck Playing a Keyboard"
venn2[[7]]$label <- "Platypus Playing a Keytar"
venn2[[8]]$label <- ""
venn2[[9]]$label <- ""
grid.newpage()
grid.draw(venn2)
categories <- c("Flour", "Egg", "Milk")
venn3 <- draw.triple.venn(10, 10, 10, 3, 3, 3, 3, category=categories)
venn3[[7]]$label <- "Flour"
venn3[[8]]$label <- "Pasta"
venn3[[9]]$label <- "Egg"
venn3[[10]]$label <- "Batter"
venn3[[11]]$label <- "Pancakes"
venn3[[12]]$label <- "Omelette"
venn3[[13]]$label <- "Milk"
venn3[[14]]$label <- ""
venn3[[15]]$label <- ""
venn3[[16]]$label <- ""
# Draw it.
grid.newpage()
grid.draw(venn3)
# Different font sizes
venn3[[7]]$label <- ""
venn3[[9]]$label <- ""
venn3[[13]]$label <- ""
grid.newpage()
grid.draw(venn3)
grid.text("Flour", unit(venn3[[7]]$x, "npc"), unit(venn3[[7]]$y, "npc"), gp=gpar(cex=2))
grid.text("Egg", unit(venn3[[9]]$x, "npc"), unit(venn3[[9]]$y, "npc"), gp=gpar(cex=2))
grid.text("Milk", unit(venn3[[13]]$x, "npc"), unit(venn3[[13]]$y, "npc"), gp=gpar(cex=2))
setwd("~/Sites/projects/2018/20180116 living/data")
options(scipen=999)
library(readr)
people <- read_csv("usa_00055.csv")
people <- people[people$AGE >= 18,] # Just adults.
people$married <- people$MARST == 1 | people$MARST == 2
people$widowed <- people$MARST == 5
people$children <- people$NCHILD > 0
people$college <- people$EDUCD >= 101 & people$EDUCD != 999
people$healthcare <- people$HCOVANY == 2
people$employed <- people$EMPSTAT == 1
people$publictrans <- people$TRANWORK >= 30
people$inpoverty <- people$POVERTY < 100
people$isveteran <- people$VETSTAT == 2
people$bornoutus <- people$BPL > 120
people$difficulty <- people$DIFFREM == 2 | people$DIFFPHYS == 2 | people$DIFFSENS == 2
# Simplify Chinese, Japanese, Other Asian into just Asian
isasian <- people$RACE >= 4 & people$RACE <= 6
people$racesimp <- people$RACE
people$racesimp[isasian] <- 4
library(matrixStats)
people2016 <- people[people$YEAR == 2016 & people$INCTOT > 0 & people$INCTOT != 9999999,]
med2016 <- weightedMedian(people2016$INCTOT, w=people2016$PERWT)
med2016
people$income_moremed <- NA
# people[people$YEAR == 2014, "income_moremed"] <- people[people$YEAR == 2014, "INCTOT"] > med2014
# people[people$YEAR == 2015, "income_moremed"] <- people[people$YEAR == 2015, "INCTOT"] > med2015
people[people$YEAR == 2016, "income_moremed"] <- people[people$YEAR == 2016, "INCTOT"] > med2016
people[people$INCTOT == 9999999, "income_moremed"] <- FALSE # Bad assumption? I don't think so. Appears to be just young people.
people$agegrp <- NA
people[people$AGE >= 18 & people$AGE < 25, "agegrp"] <- 1
people[people$AGE >= 25 & people$AGE < 45, "agegrp"] <- 2
people[people$AGE >= 45 & people$AGE < 65, "agegrp"] <- 3
people[people$AGE >= 65, "agegrp"] <- 4
library(dplyr)
grp_totals <- tally(group_by(people, SEX, RACE, agegrp), wt=PERWT)
sex <- c(1,2)               # Male, female
racesimp <- c(1,2,3,4,5)    # White, black, native, Asian, Hispanic (handle separately)
agegrp <- c(1,2,3,4)        # See age group ranges above.
grp_vals <- expand.grid(sex, racesimp, agegrp)
colnames(grp_vals) <- c("sex", "racesimp", "agegrp")
grp_vals$married <- NA
grp_vals$children <- NA
grp_vals$college <- NA
grp_vals$healthcare <- NA
grp_vals$employed <- NA
grp_vals$publictrans <- NA
grp_vals$inpoverty <- NA
grp_vals$isveteran <- NA
grp_vals$income_moremed <- NA
grp_vals$difficulty <- NA
grp_vals$widowed <- NA
grp_vals$bornoutus <- NA
grp_vals$total <- NA
grp_vals[grp_vals$sex == 2 & grp_vals$agegrp == 4 & grp_vals$racesimp == 1,]
i <- 32
grp <- grp_vals[i,]
if (grp$racesimp == 5) {
curr <- people[people$SEX == grp$sex & people$HISPAN != 0 & people$agegrp == grp$agegrp, ]
}
# Non-Hispanic
else {
curr <- people[people$SEX == grp$sex & people$racesimp == grp$racesimp & people$agegrp == grp$agegrp, ]
}
curr <- people[people$SEX == grp$sex & people$racesimp == grp$racesimp & people$agegrp == grp$agegrp, ]
cnts <- tally(group_by(curr, income_moremed), wt = PERWT)
cnts <- tally(group_by(curr, employed), wt = PERWT)
grp_vals$employed[i] <- as.numeric(round(100 * cnts[cnts$employed, "n"] / sum(cnts$n)))
work_cnt <- as.numeric(sum(cnts[cnts$employed, "n"]))
work_cnt
cnts <- tally(group_by(curr, income_moremed), wt = PERWT)
as.numeric(round(100 * cnts[cnts$income_moremed, "n"] / work_cnt))
as.numeric(round(100 * cnts[cnts$income_moremed, "n"] / sum(cnts$n)))
work_cnt
cnts
sex <- c(1,2)               # Male, female
racesimp <- c(1,2,3,4,5)    # White, black, native, Asian, Hispanic (handle separately)
agegrp <- c(1,2,3,4)        # See age group ranges above.
grp_vals <- expand.grid(sex, racesimp, agegrp)
colnames(grp_vals) <- c("sex", "racesimp", "agegrp")
grp_vals$married <- NA
grp_vals$children <- NA
grp_vals$college <- NA
grp_vals$healthcare <- NA
grp_vals$employed <- NA
grp_vals$publictrans <- NA
grp_vals$inpoverty <- NA
grp_vals$isveteran <- NA
grp_vals$income_moremed <- NA
grp_vals$difficulty <- NA
grp_vals$widowed <- NA
grp_vals$bornoutus <- NA
grp_vals$total <- NA
# Calculate values for each group.
for (i in 1:dim(grp_vals)[1]) {
grp <- grp_vals[i,]
# Hispanic
if (grp$racesimp == 5) {
curr <- people[people$SEX == grp$sex & people$HISPAN != 0 & people$agegrp == grp$agegrp, ]
}
# Non-Hispanic
else {
curr <- people[people$SEX == grp$sex & people$racesimp == grp$racesimp & people$agegrp == grp$agegrp, ]
}
# Married
cnts <- tally(group_by(curr, married), wt = PERWT)
grp_vals$married[i] <- as.numeric(round(100 * cnts[cnts$married, "n"] / sum(cnts$n)))
# Widowed
cnts <- tally(group_by(curr, widowed), wt = PERWT)
grp_vals$widowed[i] <- as.numeric(round(100 * cnts[cnts$widowed, "n"] / sum(cnts$n)))
# Children
cnts <- tally(group_by(curr, children), wt = PERWT)
grp_vals$children[i] <- as.numeric(round(100 * cnts[cnts$children, "n"] / sum(cnts$n)))
# College
cnts <- tally(group_by(curr, college), wt = PERWT)
grp_vals$college[i] <- as.numeric(round(100 * cnts[cnts$college, "n"] / sum(cnts$n)))
# Healthcare
cnts <- tally(group_by(curr, healthcare), wt = PERWT)
grp_vals$healthcare[i] <- as.numeric(round(100 * cnts[cnts$healthcare, "n"] / sum(cnts$n)))
# Employed
cnts <- tally(group_by(curr, employed), wt = PERWT)
grp_vals$employed[i] <- as.numeric(round(100 * cnts[cnts$employed, "n"] / sum(cnts$n)))
# Public transportation to work
work_cnt <- as.numeric(sum(cnts[cnts$employed, "n"]))
cnts <- tally(group_by(curr, publictrans), wt = PERWT)
grp_vals$publictrans[i] <- as.numeric(round(100 * cnts[cnts$publictrans, "n"] / work_cnt))
# Live in poverty
cnts <- tally(group_by(curr, inpoverty), wt = PERWT)
grp_vals$inpoverty[i] <- as.numeric(round(100 * cnts[cnts$inpoverty, "n"] / sum(cnts$n)))
# Is a veteran
cnts <- tally(group_by(curr, isveteran), wt = PERWT)
grp_vals$isveteran[i] <- as.numeric(round(100 * cnts[cnts$isveteran, "n"] / sum(cnts$n)))
# More than median individual income (among those who work, the median that is)
cnts <- tally(group_by(curr, income_moremed), wt = PERWT)
grp_vals$income_moremed[i] <- as.numeric(round(100 * cnts[cnts$income_moremed, "n"] / sum(cnts$n)))
# Difficulties
cnts <- tally(group_by(curr, difficulty), wt = PERWT)
grp_vals$difficulty[i] <- as.numeric(round(100 * cnts[cnts$difficulty, "n"] / sum(cnts$n)))
# Born outside the US and US territories
cnts <- tally(group_by(curr, bornoutus), wt = PERWT)
grp_vals$bornoutus[i] <- as.numeric(round(100 * cnts[cnts$bornoutus, "n"] / sum(cnts$n)))
# Total number of people in group
grp_vals$total[i] <- sum(curr$PERWT)
}
write.table(grp_vals, file="group_demog_2016_v2.tsv", sep="\t", row.names = FALSE)
setwd("~/Sites/projects/2018/20180116 living/data")
options(scipen=999)
library(readr)
people <- read_csv("usa_00056.csv")
people <- people[people$AGE >= 18,] # Just adults.
people$married <- people$MARST == 1 | people$MARST == 2
people$widowed <- people$MARST == 5
people$children <- people$NCHILD > 0
people$college <- people$EDUCD >= 101 & people$EDUCD != 999
people$healthcare <- people$HCOVANY == 2
people$employed <- people$EMPSTAT == 1
people$selfemp <- people$CLASSWKR == 1
people$publictrans <- people$TRANWORK >= 30
people$inpoverty <- people$POVERTY < 100
people$isveteran <- people$VETSTAT == 2
people$bornoutus <- people$BPL > 120
people$diffmovecog <- people$DIFFREM == 2 | people$DIFFPHYS == 2
people$diffhearvis <- people$DIFFSENS == 2
# Simplify Chinese, Japanese, Other Asian into just Asian
isasian <- people$RACE >= 4 & people$RACE <= 6
people$racesimp <- people$RACE
people$racesimp[isasian] <- 4
# Adjust income for inflation before calculating income variables.
library(matrixStats)
# people2014 <- people[people$YEAR == 2014 & people$INCTOT > 0 & people$INCTOT != 9999999,]
# med2014 <- weightedMedian(people2014$INCTOT, w=people2014$PERWT)
# people2015 <- people[people$YEAR == 2015 & people$INCTOT > 0 & people$INCTOT != 9999999,]
# med2015 <- weightedMedian(people2015$INCTOT, w=people2015$PERWT)
people2016 <- people[people$YEAR == 2016 & people$INCTOT > 0 & people$INCTOT != 9999999,]
med2016 <- weightedMedian(people2016$INCTOT, w=people2016$PERWT)
people$income_moremed <- NA
# people[people$YEAR == 2014, "income_moremed"] <- people[people$YEAR == 2014, "INCTOT"] > med2014
# people[people$YEAR == 2015, "income_moremed"] <- people[people$YEAR == 2015, "INCTOT"] > med2015
people[people$YEAR == 2016, "income_moremed"] <- people[people$YEAR == 2016, "INCTOT"] > med2016
people[people$INCTOT == 9999999, "income_moremed"] <- FALSE # Bad assumption? I don't think so. Appears to be just young people.
#
# Simplify filtering age group.
#
# 18 to 24, 25 to 44, 45 to 64, 65+
people$agegrp <- NA
people[people$AGE >= 18 & people$AGE < 25, "agegrp"] <- 1
people[people$AGE >= 25 & people$AGE < 45, "agegrp"] <- 2
people[people$AGE >= 45 & people$AGE < 65, "agegrp"] <- 3
people[people$AGE >= 65, "agegrp"] <- 4
#
# Get counts for SEX + RACE + agegrp, need to do separate for HISPANIC
#
library(dplyr)
grp_totals <- tally(group_by(people, SEX, RACE, agegrp), wt=PERWT)
# [NY] I could reformat grps after the fact,
# but if I'm going to fill in gaps anyways with for-loops....
sex <- c(1,2)               # Male, female
racesimp <- c(1,2,3,4,5)    # White, black, native, Asian, Hispanic (handle separately)
agegrp <- c(1,2,3,4)        # See age group ranges above.
grp_vals <- expand.grid(sex, racesimp, agegrp)
colnames(grp_vals) <- c("sex", "racesimp", "agegrp")
grp_vals$married <- NA
grp_vals$children <- NA
grp_vals$college <- NA
grp_vals$healthcare <- NA
grp_vals$employed <- NA
grp_vals$publictrans <- NA
grp_vals$inpoverty <- NA
grp_vals$isveteran <- NA
grp_vals$income_moremed <- NA
grp_vals$difficulty <- NA
grp_vals$widowed <- NA
grp_vals$bornoutus <- NA
grp_vals$total <- NA
# Calculate values for each group.
for (i in 1:dim(grp_vals)[1]) {
grp <- grp_vals[i,]
# Hispanic
if (grp$racesimp == 5) {
curr <- people[people$SEX == grp$sex & people$HISPAN != 0 & people$agegrp == grp$agegrp, ]
}
# Non-Hispanic
else {
curr <- people[people$SEX == grp$sex & people$racesimp == grp$racesimp & people$agegrp == grp$agegrp, ]
}
# Married
cnts <- tally(group_by(curr, married), wt = PERWT)
grp_vals$married[i] <- as.numeric(round(100 * cnts[cnts$married, "n"] / sum(cnts$n)))
# Widowed
cnts <- tally(group_by(curr, widowed), wt = PERWT)
grp_vals$widowed[i] <- as.numeric(round(100 * cnts[cnts$widowed, "n"] / sum(cnts$n)))
# Children
cnts <- tally(group_by(curr, children), wt = PERWT)
grp_vals$children[i] <- as.numeric(round(100 * cnts[cnts$children, "n"] / sum(cnts$n)))
# College
cnts <- tally(group_by(curr, college), wt = PERWT)
grp_vals$college[i] <- as.numeric(round(100 * cnts[cnts$college, "n"] / sum(cnts$n)))
# Healthcare
cnts <- tally(group_by(curr, healthcare), wt = PERWT)
grp_vals$healthcare[i] <- as.numeric(round(100 * cnts[cnts$healthcare, "n"] / sum(cnts$n)))
# Employed
cnts <- tally(group_by(curr, employed), wt = PERWT)
grp_vals$employed[i] <- as.numeric(round(100 * cnts[cnts$employed, "n"] / sum(cnts$n)))
# Public transportation to work
work_cnt <- as.numeric(sum(cnts[cnts$employed, "n"]))
cnts <- tally(group_by(curr, publictrans), wt = PERWT)
grp_vals$publictrans[i] <- as.numeric(round(100 * cnts[cnts$publictrans, "n"] / work_cnt))
# Live in poverty
cnts <- tally(group_by(curr, inpoverty), wt = PERWT)
grp_vals$inpoverty[i] <- as.numeric(round(100 * cnts[cnts$inpoverty, "n"] / sum(cnts$n)))
# Is a veteran
cnts <- tally(group_by(curr, isveteran), wt = PERWT)
grp_vals$isveteran[i] <- as.numeric(round(100 * cnts[cnts$isveteran, "n"] / sum(cnts$n)))
# More than median individual income (among those who work, the median that is)
cnts <- tally(group_by(curr, income_moremed), wt = PERWT)
grp_vals$income_moremed[i] <- as.numeric(round(100 * cnts[cnts$income_moremed, "n"] / sum(cnts$n)))
# Difficulties
cnts <- tally(group_by(curr, difficulty), wt = PERWT)
grp_vals$difficulty[i] <- as.numeric(round(100 * cnts[cnts$difficulty, "n"] / sum(cnts$n)))
# Born outside the US and US territories
cnts <- tally(group_by(curr, bornoutus), wt = PERWT)
grp_vals$bornoutus[i] <- as.numeric(round(100 * cnts[cnts$bornoutus, "n"] / sum(cnts$n)))
# Total number of people in group
grp_vals$total[i] <- sum(curr$PERWT)
}
people$married <- people$MARST == 1 | people$MARST == 2
people$widowed <- people$MARST == 5
people$children <- people$NCHILD > 0
people$college <- people$EDUCD >= 101 & people$EDUCD != 999
people$healthcare <- people$HCOVANY == 2
people$employed <- people$EMPSTAT == 1
people$selfemp <- people$CLASSWKR == 1
people$publictrans <- people$TRANWORK >= 30
people$inpoverty <- people$POVERTY < 100
people$isveteran <- people$VETSTAT == 2
people$bornoutus <- people$BPL > 120
people$diffmovecog <- people$DIFFREM == 2 | people$DIFFPHYS == 2
people$diffhearvis <- people$DIFFSENS == 2
# Simplify Chinese, Japanese, Other Asian into just Asian
isasian <- people$RACE >= 4 & people$RACE <= 6
people$racesimp <- people$RACE
people$racesimp[isasian] <- 4
# Adjust income for inflation before calculating income variables.
library(matrixStats)
# people2014 <- people[people$YEAR == 2014 & people$INCTOT > 0 & people$INCTOT != 9999999,]
# med2014 <- weightedMedian(people2014$INCTOT, w=people2014$PERWT)
# people2015 <- people[people$YEAR == 2015 & people$INCTOT > 0 & people$INCTOT != 9999999,]
# med2015 <- weightedMedian(people2015$INCTOT, w=people2015$PERWT)
people2016 <- people[people$YEAR == 2016 & people$INCTOT > 0 & people$INCTOT != 9999999,]
med2016 <- weightedMedian(people2016$INCTOT, w=people2016$PERWT)
people$income_moremed <- NA
# people[people$YEAR == 2014, "income_moremed"] <- people[people$YEAR == 2014, "INCTOT"] > med2014
# people[people$YEAR == 2015, "income_moremed"] <- people[people$YEAR == 2015, "INCTOT"] > med2015
people[people$YEAR == 2016, "income_moremed"] <- people[people$YEAR == 2016, "INCTOT"] > med2016
people[people$INCTOT == 9999999, "income_moremed"] <- FALSE # Bad assumption? I don't think so. Appears to be just young people.
#
# Simplify filtering age group.
#
# 18 to 24, 25 to 44, 45 to 64, 65+
people$agegrp <- NA
people[people$AGE >= 18 & people$AGE < 25, "agegrp"] <- 1
people[people$AGE >= 25 & people$AGE < 45, "agegrp"] <- 2
people[people$AGE >= 45 & people$AGE < 65, "agegrp"] <- 3
people[people$AGE >= 65, "agegrp"] <- 4
#
# Get counts for SEX + RACE + agegrp, need to do separate for HISPANIC
#
library(dplyr)
grp_totals <- tally(group_by(people, SEX, RACE, agegrp), wt=PERWT)
# [NY] I could reformat grps after the fact,
# but if I'm going to fill in gaps anyways with for-loops....
sex <- c(1,2)               # Male, female
racesimp <- c(1,2,3,4,5)    # White, black, native, Asian, Hispanic (handle separately)
agegrp <- c(1,2,3,4)        # See age group ranges above.
grp_vals <- expand.grid(sex, racesimp, agegrp)
colnames(grp_vals) <- c("sex", "racesimp", "agegrp")
grp_vals$married <- NA
grp_vals$children <- NA
grp_vals$college <- NA
grp_vals$healthcare <- NA
grp_vals$employed <- NA
grp_vals$selfemp <- NA
grp_vals$publictrans <- NA
grp_vals$inpoverty <- NA
grp_vals$isveteran <- NA
grp_vals$income_moremed <- NA
grp_vals$diffmovecog <- NA
grp_vals$diffhearvis <- NA
grp_vals$widowed <- NA
grp_vals$bornoutus <- NA
grp_vals$total <- NA
# Calculate values for each group.
for (i in 1:dim(grp_vals)[1]) {
grp <- grp_vals[i,]
# Hispanic
if (grp$racesimp == 5) {
curr <- people[people$SEX == grp$sex & people$HISPAN != 0 & people$agegrp == grp$agegrp, ]
}
# Non-Hispanic
else {
curr <- people[people$SEX == grp$sex & people$racesimp == grp$racesimp & people$agegrp == grp$agegrp, ]
}
# Married
cnts <- tally(group_by(curr, married), wt = PERWT)
grp_vals$married[i] <- as.numeric(round(100 * cnts[cnts$married, "n"] / sum(cnts$n)))
# Widowed
cnts <- tally(group_by(curr, widowed), wt = PERWT)
grp_vals$widowed[i] <- as.numeric(round(100 * cnts[cnts$widowed, "n"] / sum(cnts$n)))
# Children
cnts <- tally(group_by(curr, children), wt = PERWT)
grp_vals$children[i] <- as.numeric(round(100 * cnts[cnts$children, "n"] / sum(cnts$n)))
# College
cnts <- tally(group_by(curr, college), wt = PERWT)
grp_vals$college[i] <- as.numeric(round(100 * cnts[cnts$college, "n"] / sum(cnts$n)))
# Healthcare
cnts <- tally(group_by(curr, healthcare), wt = PERWT)
grp_vals$healthcare[i] <- as.numeric(round(100 * cnts[cnts$healthcare, "n"] / sum(cnts$n)))
# Employed
cnts <- tally(group_by(curr, employed), wt = PERWT)
grp_vals$employed[i] <- as.numeric(round(100 * cnts[cnts$employed, "n"] / sum(cnts$n)))
# Public transportation to work*
work_cnt <- as.numeric(sum(cnts[cnts$employed, "n"]))
cnts <- tally(group_by(curr, publictrans), wt = PERWT)
grp_vals$publictrans[i] <- as.numeric(round(100 * cnts[cnts$publictrans, "n"] / work_cnt))
# Self-employed*
cnts <- tally(group_by(curr, selfemp), wt = PERWT)
grp_vals$selfemp[i] <- as.numeric(round(100 * cnts[cnts$selfemp, "n"] /  work_cnt))
# Live in poverty
cnts <- tally(group_by(curr, inpoverty), wt = PERWT)
grp_vals$inpoverty[i] <- as.numeric(round(100 * cnts[cnts$inpoverty, "n"] / sum(cnts$n)))
# Is a veteran
cnts <- tally(group_by(curr, isveteran), wt = PERWT)
grp_vals$isveteran[i] <- as.numeric(round(100 * cnts[cnts$isveteran, "n"] / sum(cnts$n)))
# More than median individual income (among those who work, the median that is)
cnts <- tally(group_by(curr, income_moremed), wt = PERWT)
grp_vals$income_moremed[i] <- as.numeric(round(100 * cnts[cnts$income_moremed, "n"] / sum(cnts$n)))
# Cognitive or physical difficulty
cnts <- tally(group_by(curr, diffmovecog), wt = PERWT)
grp_vals$diffmovecog[i] <- as.numeric(round(100 * cnts[cnts$diffmovecog, "n"] / sum(cnts$n)))
# Hearing or vision difficulty
cnts <- tally(group_by(curr, diffhearvis), wt = PERWT)
grp_vals$diffhearvis[i] <- as.numeric(round(100 * cnts[cnts$diffhearvis, "n"] / sum(cnts$n)))
# Born outside the US and US territories
cnts <- tally(group_by(curr, bornoutus), wt = PERWT)
grp_vals$bornoutus[i] <- as.numeric(round(100 * cnts[cnts$bornoutus, "n"] / sum(cnts$n)))
# Total number of people in group
grp_vals$total[i] <- sum(curr$PERWT)
}
write.table(grp_vals, file="group_demog_2016_v3.tsv", sep="\t", row.names = FALSE)
